<?php
// $Id$

/**
 * @file
 * Provides API for adding beautytips to pages.
 */

/**
 * Implementation of hook_init().
 * 
 */
function beautytips_init() { 
  if (variable_get('beautytips_always_add', 0)) {
    $selectors = array();
    $options = array();
    $selectors = variable_get('beautytips_added_selectors_array', array());
    if (count($selectors)) {
      foreach ($selectors as $selector) {
        if (!empty($selector)) {
          $options[$selector]['cssSelect'] = $selector;
        }
      }
    }
    beautytips_add_beautytips($options);
  }
}

/**
 * Implementation of hook_menu().
 */
function beautytips_menu() {
  $items['admin/settings/beautytips'] = array(
    'title' => 'BeautyTips',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('beautytips_admin'),
    'access arguments' => array('administer site configuration'),
    'file' => 'beautytips.admin.inc',
  );
  return $items;
}

/**
 * This is the API.  Call this function to add beautytips.
 * See README.txt for details
 */
function beautytips_add_beautytips($options = NULL) {
  static $added = FALSE;
  $settings = array('beautytips' => array()); 
  $js_added = drupal_add_js($data = NULL, 'setting');

  if (count($options)) {
    foreach ($options as $beautytip => $content) {

      // Make sure the js settings are not added more than once
      if (is_array($js_added['setting'])) {
        foreach ($js_added['setting'] as $setting) {
          if (is_array($setting['beautytips'])) {
            if (array_key_exists($beautytip, $setting['beautytips'])) {
              unset($content);
            }
          }
        }
      }

      // Setup the settings array for adding js
      if (is_array($content)) {
        $settings['beautytips'][$beautytip] = $content;
        $get_keys = array_keys($content);
        $keys_no_add = array('cssSelect', 'list', 'text', 'preEval', 'ajaxDisableLink');
        $count = 0;
        for ($i = 0; $i < count($content); $i++) {
          $key = $get_keys[$i];
          if (!in_array($key, $keys_no_add)) {
            $settings['beautytips'][$beautytip]['list'][$count] = $key;
            $count++;
          }
        }
      }
    }

    if ($added && !empty($settings['beautytips'])) {
      drupal_add_js($settings, 'setting');
    }
  }
  
  // Add beautytips jQuery plugin
  if (!$added) {
    $path = drupal_get_path('module', 'beautytips');
    
    //for IE add this
    $expath = $path . '/other_libs/excanvas_r3';
    if (count(file_scan_directory($expath, 'excanvas.js', array('.', '..', 'CVS'), 0, FALSE))) {
      drupal_add_js($expath . '/excanvas.compiled.js');
    }
    if (module_exists('jquery_plugin')) {
      jquery_plugin_add('bt');
    }
    else {
      drupal_add_js($path . '/js/jquery.bt.min.js');
    }
    drupal_add_css($path . '/js/jquery.bt.css');
    drupal_add_css($path . '/css/beautytips.css');
    drupal_add_js($path . '/js/beautytips.js');

    // Set the defaults
    $settings['beautytips_defaults'] = variable_get('beautytips_defaults', array('cssStyles' => array()));
    $settings['beautytips_always_add'] = variable_get('beautytips_always_add', 0);
    $settings['beautytips_defaults']['list'] = array_keys($settings['beautytips_defaults']);
    if (isset($settings['beautytips_defaults']['cssStyles'])) {
      $settings['beautytips_defaults']['css_list'] = array_keys($settings['beautytips_defaults']['cssStyles']);
    }

    drupal_add_js($settings, 'setting');
    $added = TRUE;
  }
}

